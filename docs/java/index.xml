<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java Internals on Writeplace</title>
    <link>https://FuruzukiCH.github.io/docs/java/</link>
    <description>Recent content in Java Internals on Writeplace</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://FuruzukiCH.github.io/docs/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://FuruzukiCH.github.io/docs/java/getting_deeper/java_memory_model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://FuruzukiCH.github.io/docs/java/getting_deeper/java_memory_model/</guid>
      <description>Java Memory Structure #  Intro #  Java memory model is about how JVM stores code, objects in the memory. It is typically divided into several parts.
Reference #   Understanding Java Memory Model Memory Management in Java  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://FuruzukiCH.github.io/docs/java/getting_deeper/jvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://FuruzukiCH.github.io/docs/java/getting_deeper/jvm/</guid>
      <description>Java Virtual Machine #  JRE vs JDK #  JRE is for users, JDK is for developers.
Java Runtime Environment(JRE) #  The minimum environment needed for running a Java application, including JVM and deployment tools.
Java Development Tools(JDK) #  The complete development environment used for developing and executing Java applications, including JRE and development tools.
Java code -&amp;gt; (java compiler) -&amp;gt; bytecode(.class) -&amp;gt; JVM
JVM Architecture #  Class Loader Subsystem #  Classloader will load class files on to RAM.</description>
    </item>
    
  </channel>
</rss>
